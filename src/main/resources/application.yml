application:
  name: '@pom.artifactId@'
  description: '@pom.description@'
  version: '@pom.version@'

server.port: 8080

# Log configuration
logging.file: log/bookserver.log

# Security configuration
#spring.security.user:
#  name: bookserver
#  password: bookserver

#oauth:
#  enabled: true
#  all-in-one: true

# JWT configuration
jwt.secretKey: stubJWT

# H2 console configuration
spring.h2.console:
  enabled: true
  path: /h2

# DataSource configuration
spring:
  datasource-bookserver:
    url: jdbc:postgresql://localhost:5432/bookserver
    username: bookserver
    password: bookserver
    hikari:
      connectionTimeout: 30000
      idleTimeout: 600000
      minimumIdle: 10
      maximumPoolSize: 10
  datasource-oauth:
    url: jdbc:postgresql://localhost:5432/bookserver_oauth
    username: bookserver
    password: bookserver
    hikari:
      connectionTimeout: 30000
      idleTimeout: 600000
      minimumIdle: 10
      maximumPoolSize: 10
  jpa:
    hibernate.ddl-auto: update
    show-sql: true
    properties.hibernate.dialect: org.hibernate.dialect.PostgreSQL95Dialect
    properties.hibernate.jdbc.lob.non_contextual_creation: true

# Jackson configuration
spring.jackson:
  default-property-inclusion: non_null
  deserialization.adjust-dates-to-context-time-zone: false
